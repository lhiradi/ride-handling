// proto/driver/v1/driver.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: driver/v1/driver.proto

package driverv1

import (
	v1 "github.com/lhiradi/ride-handling/proto/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Driver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Vehicle       string                 `protobuf:"bytes,4,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_driver_v1_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_driver_v1_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_driver_v1_driver_proto_rawDescGZIP(), []int{0}
}

func (x *Driver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Driver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Driver) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Driver) GetVehicle() string {
	if x != nil {
		return x.Vehicle
	}
	return ""
}

type SetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetStatusRequest) Reset() {
	*x = SetStatusRequest{}
	mi := &file_driver_v1_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStatusRequest) ProtoMessage() {}

func (x *SetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_v1_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStatusRequest.ProtoReflect.Descriptor instead.
func (*SetStatusRequest) Descriptor() ([]byte, []int) {
	return file_driver_v1_driver_proto_rawDescGZIP(), []int{1}
}

func (x *SetStatusRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *SetStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Location      *v1.GeoPoint           `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	AtUnixSec     int64                  `protobuf:"varint,3,opt,name=at_unix_sec,json=atUnixSec,proto3" json:"at_unix_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_driver_v1_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_v1_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_driver_v1_driver_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *HeartbeatRequest) GetLocation() *v1.GeoPoint {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *HeartbeatRequest) GetAtUnixSec() int64 {
	if x != nil {
		return x.AtUnixSec
	}
	return 0
}

type FindNearbyDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           float64                `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`                           // Latitude of rider
	Lon           float64                `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`                           // Longitude of rider
	RadiusKm      float64                `protobuf:"fixed64,3,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"` // Search radius in kilometers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNearbyDriversRequest) Reset() {
	*x = FindNearbyDriversRequest{}
	mi := &file_driver_v1_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNearbyDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyDriversRequest) ProtoMessage() {}

func (x *FindNearbyDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_v1_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyDriversRequest.ProtoReflect.Descriptor instead.
func (*FindNearbyDriversRequest) Descriptor() ([]byte, []int) {
	return file_driver_v1_driver_proto_rawDescGZIP(), []int{3}
}

func (x *FindNearbyDriversRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *FindNearbyDriversRequest) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *FindNearbyDriversRequest) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

type FindNearbyDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverIds     []string               `protobuf:"bytes,1,rep,name=driver_ids,json=driverIds,proto3" json:"driver_ids,omitempty"` // List of nearby driver IDs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNearbyDriversResponse) Reset() {
	*x = FindNearbyDriversResponse{}
	mi := &file_driver_v1_driver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNearbyDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyDriversResponse) ProtoMessage() {}

func (x *FindNearbyDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_v1_driver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyDriversResponse.ProtoReflect.Descriptor instead.
func (*FindNearbyDriversResponse) Descriptor() ([]byte, []int) {
	return file_driver_v1_driver_proto_rawDescGZIP(), []int{4}
}

func (x *FindNearbyDriversResponse) GetDriverIds() []string {
	if x != nil {
		return x.DriverIds
	}
	return nil
}

var File_driver_v1_driver_proto protoreflect.FileDescriptor

const file_driver_v1_driver_proto_rawDesc = "" +
	"\n" +
	"\x16driver/v1/driver.proto\x12\tdriver.v1\x1a\x16common/v1/common.proto\x1a\x1bgoogle/protobuf/empty.proto\"\\\n" +
	"\x06Driver\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05phone\x18\x03 \x01(\tR\x05phone\x12\x18\n" +
	"\avehicle\x18\x04 \x01(\tR\avehicle\"G\n" +
	"\x10SetStatusRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"\x80\x01\n" +
	"\x10HeartbeatRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12/\n" +
	"\blocation\x18\x02 \x01(\v2\x13.common.v1.GeoPointR\blocation\x12\x1e\n" +
	"\vat_unix_sec\x18\x03 \x01(\x03R\tatUnixSec\"[\n" +
	"\x18FindNearbyDriversRequest\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\x02 \x01(\x01R\x03lon\x12\x1b\n" +
	"\tradius_km\x18\x03 \x01(\x01R\bradiusKm\":\n" +
	"\x19FindNearbyDriversResponse\x12\x1d\n" +
	"\n" +
	"driver_ids\x18\x01 \x03(\tR\tdriverIds2\xf3\x01\n" +
	"\rDriverService\x12@\n" +
	"\tSetStatus\x12\x1b.driver.v1.SetStatusRequest\x1a\x16.google.protobuf.Empty\x12@\n" +
	"\tHeartbeat\x12\x1b.driver.v1.HeartbeatRequest\x1a\x16.google.protobuf.Empty\x12^\n" +
	"\x11FindNearbyDrivers\x12#.driver.v1.FindNearbyDriversRequest\x1a$.driver.v1.FindNearbyDriversResponseB;Z9github.com/lhiradi/ride-handling/proto/driver/v1;driverv1b\x06proto3"

var (
	file_driver_v1_driver_proto_rawDescOnce sync.Once
	file_driver_v1_driver_proto_rawDescData []byte
)

func file_driver_v1_driver_proto_rawDescGZIP() []byte {
	file_driver_v1_driver_proto_rawDescOnce.Do(func() {
		file_driver_v1_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_driver_v1_driver_proto_rawDesc), len(file_driver_v1_driver_proto_rawDesc)))
	})
	return file_driver_v1_driver_proto_rawDescData
}

var file_driver_v1_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_driver_v1_driver_proto_goTypes = []any{
	(*Driver)(nil),                    // 0: driver.v1.Driver
	(*SetStatusRequest)(nil),          // 1: driver.v1.SetStatusRequest
	(*HeartbeatRequest)(nil),          // 2: driver.v1.HeartbeatRequest
	(*FindNearbyDriversRequest)(nil),  // 3: driver.v1.FindNearbyDriversRequest
	(*FindNearbyDriversResponse)(nil), // 4: driver.v1.FindNearbyDriversResponse
	(*v1.GeoPoint)(nil),               // 5: common.v1.GeoPoint
	(*emptypb.Empty)(nil),             // 6: google.protobuf.Empty
}
var file_driver_v1_driver_proto_depIdxs = []int32{
	5, // 0: driver.v1.HeartbeatRequest.location:type_name -> common.v1.GeoPoint
	1, // 1: driver.v1.DriverService.SetStatus:input_type -> driver.v1.SetStatusRequest
	2, // 2: driver.v1.DriverService.Heartbeat:input_type -> driver.v1.HeartbeatRequest
	3, // 3: driver.v1.DriverService.FindNearbyDrivers:input_type -> driver.v1.FindNearbyDriversRequest
	6, // 4: driver.v1.DriverService.SetStatus:output_type -> google.protobuf.Empty
	6, // 5: driver.v1.DriverService.Heartbeat:output_type -> google.protobuf.Empty
	4, // 6: driver.v1.DriverService.FindNearbyDrivers:output_type -> driver.v1.FindNearbyDriversResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_driver_v1_driver_proto_init() }
func file_driver_v1_driver_proto_init() {
	if File_driver_v1_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_driver_v1_driver_proto_rawDesc), len(file_driver_v1_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_v1_driver_proto_goTypes,
		DependencyIndexes: file_driver_v1_driver_proto_depIdxs,
		MessageInfos:      file_driver_v1_driver_proto_msgTypes,
	}.Build()
	File_driver_v1_driver_proto = out.File
	file_driver_v1_driver_proto_goTypes = nil
	file_driver_v1_driver_proto_depIdxs = nil
}

// proto/matching/v1/matching.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: matching/v1/matching.proto

package matchingv1

import (
	v1 "github.com/lhiradi/ride-handling/proto/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	Pickup        *v1.GeoPoint           `protobuf:"bytes,2,opt,name=pickup,proto3" json:"pickup,omitempty"`
	RadiusM       int32                  `protobuf:"varint,3,opt,name=radius_m,json=radiusM,proto3" json:"radius_m,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	mi := &file_matching_v1_matching_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v1_matching_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_matching_v1_matching_proto_rawDescGZIP(), []int{0}
}

func (x *MatchRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *MatchRequest) GetPickup() *v1.GeoPoint {
	if x != nil {
		return x.Pickup
	}
	return nil
}

func (x *MatchRequest) GetRadiusM() int32 {
	if x != nil {
		return x.RadiusM
	}
	return 0
}

func (x *MatchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Invitation struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TripId           string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId         string                 `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status           string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ExpiresAtUnixSec int64                  `protobuf:"varint,5,opt,name=expires_at_unix_sec,json=expiresAtUnixSec,proto3" json:"expires_at_unix_sec,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Invitation) Reset() {
	*x = Invitation{}
	mi := &file_matching_v1_matching_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invitation) ProtoMessage() {}

func (x *Invitation) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v1_matching_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invitation.ProtoReflect.Descriptor instead.
func (*Invitation) Descriptor() ([]byte, []int) {
	return file_matching_v1_matching_proto_rawDescGZIP(), []int{1}
}

func (x *Invitation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Invitation) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *Invitation) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Invitation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Invitation) GetExpiresAtUnixSec() int64 {
	if x != nil {
		return x.ExpiresAtUnixSec
	}
	return 0
}

type MatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Invites       []*Invitation          `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchResponse) Reset() {
	*x = MatchResponse{}
	mi := &file_matching_v1_matching_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResponse) ProtoMessage() {}

func (x *MatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v1_matching_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResponse.ProtoReflect.Descriptor instead.
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return file_matching_v1_matching_proto_rawDescGZIP(), []int{2}
}

func (x *MatchResponse) GetInvites() []*Invitation {
	if x != nil {
		return x.Invites
	}
	return nil
}

type AcceptInvitationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvitationId  string                 `protobuf:"bytes,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	TripId        string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptInvitationRequest) Reset() {
	*x = AcceptInvitationRequest{}
	mi := &file_matching_v1_matching_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptInvitationRequest) ProtoMessage() {}

func (x *AcceptInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v1_matching_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptInvitationRequest.ProtoReflect.Descriptor instead.
func (*AcceptInvitationRequest) Descriptor() ([]byte, []int) {
	return file_matching_v1_matching_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptInvitationRequest) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

func (x *AcceptInvitationRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *AcceptInvitationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type AcceptInvitationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptInvitationResponse) Reset() {
	*x = AcceptInvitationResponse{}
	mi := &file_matching_v1_matching_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptInvitationResponse) ProtoMessage() {}

func (x *AcceptInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v1_matching_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptInvitationResponse.ProtoReflect.Descriptor instead.
func (*AcceptInvitationResponse) Descriptor() ([]byte, []int) {
	return file_matching_v1_matching_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptInvitationResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

var File_matching_v1_matching_proto protoreflect.FileDescriptor

const file_matching_v1_matching_proto_rawDesc = "" +
	"\n" +
	"\x1amatching/v1/matching.proto\x12\vmatching.v1\x1a\x16common/v1/common.proto\"\x85\x01\n" +
	"\fMatchRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12+\n" +
	"\x06pickup\x18\x02 \x01(\v2\x13.common.v1.GeoPointR\x06pickup\x12\x19\n" +
	"\bradius_m\x18\x03 \x01(\x05R\aradiusM\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"\x99\x01\n" +
	"\n" +
	"Invitation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x03 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12-\n" +
	"\x13expires_at_unix_sec\x18\x05 \x01(\x03R\x10expiresAtUnixSec\"B\n" +
	"\rMatchResponse\x121\n" +
	"\ainvites\x18\x01 \x03(\v2\x17.matching.v1.InvitationR\ainvites\"t\n" +
	"\x17AcceptInvitationRequest\x12#\n" +
	"\rinvitation_id\x18\x01 \x01(\tR\finvitationId\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x03 \x01(\tR\bdriverId\"6\n" +
	"\x18AcceptInvitationResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted2\xb2\x01\n" +
	"\x0fMatchingService\x12>\n" +
	"\x05Match\x12\x19.matching.v1.MatchRequest\x1a\x1a.matching.v1.MatchResponse\x12_\n" +
	"\x10AcceptInvitation\x12$.matching.v1.AcceptInvitationRequest\x1a%.matching.v1.AcceptInvitationResponseB?Z=github.com/lhiradi/ride-handling/proto/matching/v1;matchingv1b\x06proto3"

var (
	file_matching_v1_matching_proto_rawDescOnce sync.Once
	file_matching_v1_matching_proto_rawDescData []byte
)

func file_matching_v1_matching_proto_rawDescGZIP() []byte {
	file_matching_v1_matching_proto_rawDescOnce.Do(func() {
		file_matching_v1_matching_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_matching_v1_matching_proto_rawDesc), len(file_matching_v1_matching_proto_rawDesc)))
	})
	return file_matching_v1_matching_proto_rawDescData
}

var file_matching_v1_matching_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_matching_v1_matching_proto_goTypes = []any{
	(*MatchRequest)(nil),             // 0: matching.v1.MatchRequest
	(*Invitation)(nil),               // 1: matching.v1.Invitation
	(*MatchResponse)(nil),            // 2: matching.v1.MatchResponse
	(*AcceptInvitationRequest)(nil),  // 3: matching.v1.AcceptInvitationRequest
	(*AcceptInvitationResponse)(nil), // 4: matching.v1.AcceptInvitationResponse
	(*v1.GeoPoint)(nil),              // 5: common.v1.GeoPoint
}
var file_matching_v1_matching_proto_depIdxs = []int32{
	5, // 0: matching.v1.MatchRequest.pickup:type_name -> common.v1.GeoPoint
	1, // 1: matching.v1.MatchResponse.invites:type_name -> matching.v1.Invitation
	0, // 2: matching.v1.MatchingService.Match:input_type -> matching.v1.MatchRequest
	3, // 3: matching.v1.MatchingService.AcceptInvitation:input_type -> matching.v1.AcceptInvitationRequest
	2, // 4: matching.v1.MatchingService.Match:output_type -> matching.v1.MatchResponse
	4, // 5: matching.v1.MatchingService.AcceptInvitation:output_type -> matching.v1.AcceptInvitationResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_matching_v1_matching_proto_init() }
func file_matching_v1_matching_proto_init() {
	if File_matching_v1_matching_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_matching_v1_matching_proto_rawDesc), len(file_matching_v1_matching_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matching_v1_matching_proto_goTypes,
		DependencyIndexes: file_matching_v1_matching_proto_depIdxs,
		MessageInfos:      file_matching_v1_matching_proto_msgTypes,
	}.Build()
	File_matching_v1_matching_proto = out.File
	file_matching_v1_matching_proto_goTypes = nil
	file_matching_v1_matching_proto_depIdxs = nil
}
